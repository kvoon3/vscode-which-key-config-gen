// This file is generated by `vscode-ext-gen`. Do not modify manually.
// @see https://github.com/antfu/vscode-ext-gen

// Meta info
export const publisher = "kvoon"
export const name = "which-key-config-gen"
export const version = "0.0.0"
export const displayName = "Which key Config Generator"
export const description = "Generate vscode whichkey config according to your Vim keymap"
export const extensionId = `${publisher}.${name}`

/**
 * Type union of all commands
 */
export type CommandKey = 
  | "whichkeyConfigGen.show"

/**
 * Commands map registed by `kvoon.which-key-config-gen`
 */
export const commands = {
  /**
   * Show Generated Which Key
   * @value `whichkeyConfigGen.show`
   */
  show: "whichkeyConfigGen.show",
} satisfies Record<string, CommandKey>

/**
 * Type union of all configs
 */
export type ConfigKey = 
  | "whichkeyConfigGen.bindingOverrides"
  | "whichkeyConfigGen.bindings"

export interface ConfigKeyTypeMap {
  "whichkeyConfigGen.bindingOverrides": unknown[],
  "whichkeyConfigGen.bindings": unknown[],
}

export interface ConfigShorthandMap {
  bindingOverrides: "whichkeyConfigGen.bindingOverrides",
  bindings: "whichkeyConfigGen.bindings",
}

export interface ConfigItem<T extends keyof ConfigKeyTypeMap> {
  key: T,
  default: ConfigKeyTypeMap[T],
}


/**
 * Configs map registed by `kvoon.which-key-config-gen`
 */
export const configs = {
  /**
   * 
   * @key `whichkeyConfigGen.bindingOverrides`
   * @default `[]`
   * @type `array`
   */
  bindingOverrides: {
    key: "whichkeyConfigGen.bindingOverrides",
    default: [],
  } as ConfigItem<"whichkeyConfigGen.bindingOverrides">,
  /**
   * 
   * @key `whichkeyConfigGen.bindings`
   * @default `[]`
   * @type `array`
   */
  bindings: {
    key: "whichkeyConfigGen.bindings",
    default: [],
  } as ConfigItem<"whichkeyConfigGen.bindings">,
}

export interface ScopedConfigKeyTypeMap {
  "bindingOverrides": unknown[],
  "bindings": unknown[],
}

export const scopedConfigs = {
  scope: "whichkeyConfigGen",
  defaults: {
    "bindingOverrides": [],
    "bindings": [],
  } satisfies ScopedConfigKeyTypeMap,
}

